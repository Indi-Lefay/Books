pip install flask
from flask import Flask, request, jsonify

app = Flask(__name__)

# Dicionário para armazenar os livros por gênero
biblioteca = {}

@app.route('/')
def home():
    return "Bem-vindo à Biblioteca Online!"

# Endpoint para adicionar um gênero
@app.route('/adicionar_genero', methods=['POST'])
def adicionar_genero():
    genero = request.json.get('genero')
    if genero not in biblioteca:
        biblioteca[genero] = []
        return jsonify({'message': f'Gênero "{genero}" adicionado com sucesso!'}), 201
    else:
        return jsonify({'message': f'Gênero "{genero}" já existe.'}), 400

# Endpoint para adicionar um livro
@app.route('/adicionar_livro', methods=['POST'])
def adicionar_livro():
    genero = request.json.get('genero')
    livro = request.json.get('livro')
    if genero in biblioteca:
        if livro not in biblioteca[genero]:
            biblioteca[genero].append(livro)
            return jsonify({'message': f'Livro "{livro}" adicionado ao gênero "{genero}" com sucesso!'}), 201
        else:
            return jsonify({'message': f'Livro "{livro}" já está armazenado no gênero "{genero}".'}), 400
    else:
        return jsonify({'message': f'Gênero "{genero}" não encontrado.'}), 404

# Endpoint para exibir todos os livros
@app.route('/exibir_livros', methods=['GET'])
def exibir_livros():
    return jsonify(biblioteca), 200

# Endpoint para remover um livro
@app.route('/remover_livro', methods=['DELETE'])
def remover_livro():
    genero = request.json.get('genero')
    livro = request.json.get('livro')
    if genero in biblioteca and livro in biblioteca[genero]:
        biblioteca[genero].remove(livro)
        return jsonify({'message': f'Livro "{livro}" removido do gênero "{genero}".'}), 200
    else:
        return jsonify({'message': f'Livro ou gênero não encontrado.'}), 404

if __name__ == '__main__':
    app.run(debug=True)
